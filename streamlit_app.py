import streamlit as st
import requests
import json
import time

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="CarGlass - Consulta de Atendimento",
    page_icon="üöó",
    layout="centered"
)

# T√≠tulo e descri√ß√£o
st.title('Consulta de Cliente CarGlass')
st.subheader('Interface para teste do webhook n8n')

# Alerta sobre o modo de teste
st.warning("""
**IMPORTANTE - Modo de Teste:**
1. Antes de fazer uma consulta, voc√™ precisa clicar no bot√£o 'Test workflow' no canvas do n8n
2. Cada clique no bot√£o 'Test workflow' permite apenas UMA chamada ao webhook
3. Se receber erro 404, volte ao n8n e clique novamente no bot√£o 'Test workflow'
""")

# Criar o formul√°rio
with st.form("consulta_form"):
    tipo_consulta = st.selectbox(
        'Selecione o tipo de consulta:',
        ('cpf', 'telefone', 'ordem')
    )
    
    # Campo de entrada com valida√ß√£o diferente dependendo do tipo
    if tipo_consulta == 'cpf':
        valor = st.text_input('Digite o CPF (apenas n√∫meros):', max_chars=11)
        st.caption("Ex: 12345678900")
    elif tipo_consulta == 'telefone':
        valor = st.text_input('Digite o telefone (com DDD, apenas n√∫meros):', max_chars=11)
        st.caption("Ex: 11987654321")
    else:  # Ordem
        valor = st.text_input('Digite o n√∫mero da ordem:')
        st.caption("Ex: ORD123456")
    
    # Bot√£o de submit
    submitted = st.form_submit_button("Consultar")

# Processar o formul√°rio quando for enviado
if submitted:
    # URL do webhook n8n
    webhook_url = "https://carglasspaschoa.app.n8n.cloud/webhook-test/18504dee-bedd-462d-874a-df828daff30c"
    
    # Preparar os dados para enviar
    payload = {
        "tipo": tipo_consulta,
        "valor": valor
    }
    
    # Verificar se h√° um valor inserido
    if not valor:
        st.error("Por favor, insira um valor para consulta.")
    else:
        try:
            # Fazer a requisi√ß√£o POST para o webhook
            with st.spinner('Aguarde, realizando consulta...'):
                # Simular um pequeno delay para melhor experi√™ncia do usu√°rio
                time.sleep(0.5)
                response = requests.post(webhook_url, json=payload)
            
            # Verificar a resposta
            if response.status_code == 200:
                result = response.json()
                
                # Verifica se h√° dados
                if result.get("sucesso", False):
                    st.success("Consulta realizada com sucesso!")
                else:
                    st.warning("N√£o foram encontrados registros para esta consulta")
                
                # Exibe a mensagem da IA em destaque
                if "mensagem_ia" in result:
                    st.markdown("### Mensagem da CarGlass")
                    st.markdown(f'<div style="background-color:#f0f7ff; padding:20px; border-radius:10px; border-left:5px solid #0066cc;">{result["mensagem_ia"]}</div>', unsafe_allow_html=True)
                
                # Exibe os dados t√©cnicos em uma se√ß√£o expans√≠vel
                with st.expander("Detalhes t√©cnicos"):
                    dados = result.get("dados", {})
                    
                    if dados:
                        col1, col2 = st.columns(2)
                        
                        with col1:
                            st.subheader("Informa√ß√µes do Cliente")
                            st.write(f"**Nome:** {dados.get('nome', 'N√£o informado')}")
                            st.write(f"**CPF:** {dados.get('cpf', 'N√£o informado')}")
                            st.write(f"**Telefone:** {dados.get('telefone', 'N√£o informado')}")
                        
                        with col2:
                            st.subheader("Informa√ß√µes do Servi√ßo")
                            st.write(f"**Ordem:** {dados.get('ordem', 'N√£o informado')}")
                            st.write(f"**Status:** {dados.get('status', 'N√£o informado')}")
                            st.write(f"**Tipo de Servi√ßo:** {dados.get('tipo_servico', 'N√£o informado')}")
                        
                        # Informa√ß√µes do ve√≠culo se dispon√≠veis
                        if "veiculo" in dados:
                            veiculo = dados.get('veiculo', {})
                            st.subheader("Informa√ß√µes do Ve√≠culo")
                            st.write(f"**Modelo:** {veiculo.get('modelo', 'N√£o informado')}")
                            st.write(f"**Placa:** {veiculo.get('placa', 'N√£o informado')}")
                            st.write(f"**Ano:** {veiculo.get('ano', 'N√£o informado')}")
                    else:
                        st.info("N√£o h√° detalhes t√©cnicos dispon√≠veis para esta consulta")
                
            elif response.status_code == 404:
                st.error("Webhook n√£o encontrado ou n√£o ativado.")
                st.info("""
                **Para resolver:**
                1. Abra o n8n e clique no bot√£o 'Test workflow' no canvas
                2. Volte para esta p√°gina e tente novamente
                3. Lembre-se: cada clique no bot√£o 'Test workflow' permite apenas UMA consulta
                """)
            else:
                st.error(f"Erro ao consultar: {response.status_code}")
                st.text(response.text)
        except Exception as e:
            st.error(f"Ocorreu um erro na requisi√ß√£o: {str(e)}")
            st.info("Verifique se o webhook est√° ativo e configurado corretamente.")

# Se√ß√£o de ajuda
with st.expander("Como usar esta interface de teste"):
    st.markdown("""
    ### Instru√ß√µes:
    
    1. **Prepare o n8n**:
       - Abra seu fluxo no n8n
       - Clique no bot√£o 'Test workflow' no canvas
       - Isso ativar√° o webhook temporariamente para UMA chamada
    
    2. **Fa√ßa a consulta**:
       - Selecione o tipo de consulta (CPF, Telefone ou Ordem)
       - Digite o valor correspondente
       - Clique em "Consultar"
    
    3. **Se receber erro 404**:
       - O webhook n√£o est√° ativo ou j√° foi usado
       - Volte ao n8n e clique novamente no bot√£o 'Test workflow'
       - Retorne a esta p√°gina e tente a consulta novamente
    
    ### Canais de Contato da CarGlass:
    
    - **Central de Atendimento**: 0800-727-2327
    - **WhatsApp**: (11) 4003-8070
    - **Site**: [www.carglass.com.br](https://www.carglass.com.br)
    """)

# Rodap√©
st.markdown("""
<div style="margin-top: 50px; text-align: center; color: #666;">
    <p>¬© 2025 CarGlass Brasil - Sistema de Consulta de Atendimento</p>
</div>
""", unsafe_allow_html=True)
